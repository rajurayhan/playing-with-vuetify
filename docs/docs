- Installed Laravel 7.2 (Latest Version So far. Need your confirmation regarding version)
- Added Table Defination Seeder, Migratioin and Model in project. 
- Researching Vuetify. 

What I need- 
	A repo where to push changes? - 
	Laravel v? - 6.9 (Previous One)
	
19-03-2020: 

24-03-2020: 
	- Will we use Vue routing or Laravel routing for Frontend stuffs? 

	- For API we will use Laravel routes, right? 
	- for Frontend end, we will use Vue? 
	
	- Use Vue router for frontend. 
	- Laravel routes for API 

	- Laravel will Just Take Requests and Respond 
	- VueJS will handle all navigation.  

Tasks: 

	- Install Vue Router and Configure routes for Table Defination for now
	- CRUD API for TableDefinition (1st Priority)
			- Create
			- Read/View (Single & All)
			- Update 
			- Delete 
			
	- Create Vue Components for Sign In  - Not now
	- Create API for Sign In  - Not Now 

	- APIs: 
		- Authentication (Passport) - Skip for Now - We will do it later. 

		- CRUD API for TableDefinition (1st Priority)
			- Create
			- Read/View (Single & All)
			- Update 
			- Delete 

		- CRUD API for DataColumnMapping (Not me for now.)
			- Create
			- Read/View (Single & All)
			- Update 
			- Delete
		
	- Send Estimation for CRUD API and Implementation. 
	- Prepare Docs to Serve the Application 
	- Send Source as ZIP File Daily! 



	25-03-2020:
		- Vue Router Configuration and Dig Deep Vue Documentation 
		- Solve Seeder Issue 
		- Continue fron Yesterdays tasks. 


	30-03-2020: 
		- Will we use Vuetify Form Components for Create and Update? - Yes 
		- Seeded Successfully! 
		- Single Page or Bootstrap Modal for Create and Update? - Modal is fine 
		- For now we will prepare the skeleton of the app and complete functionalities then we can design. 		
		- Contact Megumu Sir regarding this project as Fujimaru Sir leaving this project. *** 
		- 07:00 - 08:30 = Pair Programming from Next Week. 

	Task Summery - 
		- Implemet Form Components of Vuetify 
		- Use Modals for Add and Update 
		- Implement API for CRUD 
			- Create 
			- Read
			- Update 
			- Delete 
		- Integrate APIs with Vue on Frontend 
		- Do we need DETAILS view ? - Not for Now. 
		- Vuetify Dialog is good for Confirmation. 

	
	31-03-2020:
		Progress: 
			- Created Basic API for Table definations 
			- Displayed data on Datatable.  

	01-04-2020: 
		- Add validation on Add and Edit API 
		- Remove the Progress(?) bar after data is loaded on Loading v-datatable. - Done 
		- Show Success/Error Message for Actions (CRUD) 

	02-04-2020: 
		Issue to Notice: Vuetify Default loading=true keeps the loading bar even after the table is ready. 
		In that case, add a boolean type variable to manage the loading bar. 

		My Problem: 
			On create - 
				The ID is missing in item object. - Solved
				
		We will not useThird party library. 
		
		- Error Handling 
		- Database Table Create Functions (Dynamic) 
		- On Edit Dialog,
			Table name is readonly. // Not Valid now. 
		- Add dropdown 
			All
			e_hiiku_seiseki	
			user
			anotherTable 

	03-04-2020: 
		- API Error Handling 
		- Table Name Will Be Dropdown from m_table table and Editable/Changeable. 
		- Change Table Name on Add/Edit dialog from text to dropdown. 
		- Add dropdown  (This will just sort the table data as per the selection)
			All
			e_hiiku_seiseki	
			user
			anotherTable 


Why we do not want user to be able to change it? 

Case: 
	When can cange? 
		- 
	When can not cange? 
		- 

	User selected wrong table name and saved. If it's readonly, user can not change the table. S/he will have to delete and create one again. Isn't it? 

	e_hiiku_seiseki 
	e_anythings

	06-04-2020: 

		- Made changes on migrations as per our discission on last day. Replaced table name with table id and made relations on model.
		- Created new migration, model and API to get table list
		- Integrated Table List API on frontend.
		- Added drop-down on list page.
		- Added drop-down on Add and Edit modal.
		- Updated Create and Update API
		- Error Handling is on progress.

		created a migration for this table with following fields:
			- id
			- table_name
			- table_name_alias

		php artisan db:seed --class=TablesSeeder

	07-04-2020: 

	08-04-2020: 
		- What about Reseting all table - Add Cross icon / Clear button. 
		- Set Default Table Value on Edit Modal. 
		- Read VueX (just for information). 
		- Replace Table name with Table Alias on Frontend. 
		- Use Laravel API Resource to format Response. 
		- API Error Handling 

	09-04-2020: 
		- Weekly Basis Spreadsheet
		- Send Spreadsheet - Done
		- Set TableName after Update. Done 
		- Add Cross icon / Clear button.  - Done 
		- Use Resource instead of RAW data response. - Done
		- API Error Handling - Working on It. 
			- Implemented Validation On Create Method
			- Implemented Validation On Update Method
			- Implemented Model Not Found Exception On Delete Method
			- Exception Handled. 

			- Need to show Error Messages on Frontend

		404	Not Found (page or other resource doesnâ€™t exist)
		401	Not authorized (not logged in)
		403	Logged in but access to requested area is forbidden
		400	Bad request (something wrong with URL or parameters)
		422	Unprocessable Entity (validation failed)
		500	General server error

	14-04-2020: 
		- Specify/List Error Handling Tasks 
		- If DB is Down or Any other Problem in server side. 
			- What happens (Task - Error Handling design)
		- 

		Errors That May Happens - 
			- If server is Down
				= 
			- If DB connection fails
			 	= 
			- If calls HTTPS over HTTP 
				= 
			- If Calls wrong Method 
				= 
			- If Authentication fails / Auth token mismatch 
				= 
			- If content type is missing 
				= 
			- If validation fails
				= 
			- If calls unavailable route (404)
				= 
		
	15- 04- 2020: 
		- Implemet not Merging 
		- /admin will start my app
		- APITableDefinitionController
		 	- It handles CRUD of TableDefination 
		- Send Application Structure Design After Merging. 
	- Changed
	- Change


